image: docker

services:
  - docker:dind

variables:
  DOCKER_UNIQ: "${CI_PROJECT_NAME}-build-${CI_PIPELINE_ID}"
  DOCKER_NAME: "${DOCKER_ACC}/${DOCKER_PKG}"
  DOCKER_ARCH: "linux/amd64,linux/arm64"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - prepare
  - build_base
  - build_arch
  - release
  - purge

default:
  tags:
    - docker

.tpl-base:
  before_script:
    # Variables
    - DOCKER_PHP=$([[ $BUILD_VERSION == php* ]] && echo ${BUILD_VERSION:3:3} || echo "false")
    - DOCKER_TAIL=$([[ $BUILD_NPM == "true" ]] && echo "-npm" || echo "")
    - DOCKER_TAG=${BUILD_VERSION}${DOCKER_TAIL}
    - DOCKER_CACHE=${CI_REGISTRY_IMAGE}:cache-${CI_PIPELINE_ID}-core${DOCKER_TAIL}
    - DOCKER_LOCAL=${CI_REGISTRY_IMAGE}:build-${CI_PIPELINE_ID}-${DOCKER_TAG}
    # Registry
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - echo "echo \"$CI_REGISTRY_PASSWORD\" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY"

.tpl-matrix-core:
  parallel:
    matrix:
      - BUILD_VERSION: [ 'core' ]
        BUILD_NPM: [ 'false', 'true' ]

.tpl-matrix-php:
  parallel:
    matrix:
      - BUILD_VERSION: [ 'php5.6', 'php7.0', 'php7.1', 'php7.2', 'php7.3', 'php7.4', 'php8.0', 'php8.1', 'php8.2', 'php8.3', 'php8.4' ]
        BUILD_NPM: [ 'false', 'true' ]

.tpl-build:
  extends:
    - .tpl-base
  script:
    # Vars
    - DOCKER_ARCH=${CI_RUNNER_EXECUTABLE_ARCH/\//-}
    # Init
    - echo "Building $DOCKER_ARCH image for \"$DOCKER_TAG\" from \"$CI_COMMIT_BRANCH\" branch:" \
      && echo " - Container PHP is ${DOCKER_PHP:-false}" \
      && echo " - Container NPM is $BUILD_NPM" \
      && echo " - Cache is $DOCKER_CACHE" \
      && echo " - Local is $DOCKER_LOCAL" \
      && echo " - Runner ID is $CI_RUNNER_ID" \
      && echo " - Runner Arch is $CI_RUNNER_EXECUTABLE_ARCH"
    #
    - CONTAINER_IMAGE=$DOCKER_LOCAL-$DOCKER_ARCH
    - CONTAINER_NAME=$DOCKER_UNIQ-$DOCKER_TAG-$DOCKER_ARCH
    - CONTAINER_CACHE=$([ "$BUILD_VERSION" = "core" ] && echo "--no-cache --cache-to type=registry,ref=$DOCKER_CACHE-$DOCKER_ARCH,mode=max" || echo "--cache-from type=registry,ref=$DOCKER_CACHE-$DOCKER_ARCH")
    # Buildx Initing
    - docker context create "context-$CI_JOB_ID"
    - docker buildx create --name "builder-$CI_JOB_ID" --use "context-$CI_JOB_ID"
    # Build
    - docker buildx build $CONTAINER_CACHE --build-arg NPM_PACKAGE=$BUILD_NPM --build-arg PHP_VERSION=${DOCKER_PHP:-false} --platform $CI_RUNNER_EXECUTABLE_ARCH --tag $CONTAINER_IMAGE --progress=plain --provenance=false . --push
    # Test
    - echo "docker run --name $CONTAINER_NAME $CONTAINER_IMAGE"
    - docker run --name $CONTAINER_NAME $CONTAINER_IMAGE >/dev/null 2>&1 &
    - echo "Waiting for container to be up and running (timeout 10 seconds)..." && sleep 10
    - echo "docker exec $CONTAINER_NAME /bin/bash /health.sh"
    - docker exec $CONTAINER_NAME /bin/bash /health.sh
    - DOCKER_CODE=$?
    - docker stop $CONTAINER_NAME || true
    - docker rm $CONTAINER_NAME || true
    - docker rmi $CONTAINER_IMAGE || true
    - if test $DOCKER_CODE -ne 0; then echo " - failed" && exit 1; fi
  after_script:
    # Cleaning
    - docker buildx rm "builder-$CI_JOB_ID" || true
    - docker context rm "context-$CI_JOB_ID" || true
#  needs:
#    - job: prepare_ssl

#prepare_ssl:
#  stage: prepare
#  script:
#    - openssl dhparam -out ./ssl/dhparam.pem 4096
#    - openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout ./ssl/default.key -out ./ssl/default.crt -subj '/C=NO/ST=Null/L=Null/O=Null/OU=Null/CN=Null'
#  artifacts:
#    name: $DOCKER_UNIQ
#    expire_in: 1 hour
#    paths:
#      - ssl/
#  tags:
#    - linux-amd64

build_base_core:
  stage: build_base
  extends:
    - .tpl-build
    - .tpl-matrix-core
  tags:
    - linux-amd64

build_base_php:
  stage: build_base
  extends:
    - .tpl-build
    - .tpl-matrix-php
  needs:
    - job: build_base_core
  tags:
    - linux-amd64

build_arm64_core:
  stage: build_arch
  extends:
    - .tpl-build
    - .tpl-matrix-core
  tags:
    - linux-amd64

build_arm64_php:
  stage: build_arch
  extends:
    - .tpl-build
    - .tpl-matrix-php
  needs:
    - job: build_arm64_core
  tags:
    - linux-arm64

#release_php:
#release_core:
#  stage: release
#  extends:
#    - .tpl-base
#  script:
#    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USER" --password-stdin
#  parallel:
#    matrix:
#      - BUILD_VERSION: [ 'core', 'php5.6', 'php7.0', 'php7.1', 'php7.2', 'php7.3', 'php7.4', 'php8.0', 'php8.1', 'php8.2', 'php8.3', 'php8.4' ]
#        BUILD_NPM: [ 'true', 'false' ]
#
## purge: