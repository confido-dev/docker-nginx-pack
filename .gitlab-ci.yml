image: confido/buildx-qemu:latest

services:
  - docker:dind

before_script:
  - docker info

variables:
  DOCKER_UNIQ: "build-${CI_PROJECT_NAME}-${CI_COMMIT_BRANCH}-${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_IID}"
  DOCKER_NAME: "${DOCKER_ACC}/${DOCKER_PKG}"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - test_core
  - test_php
  - prepare
  - build_core
  - build_php

default:
  tags:
    - docker
    - linux
    - arch-amd64

.tpl-stage-test:
  before_script:
    # Vars
    - DOCKER_PHP=$([[ $BUILD_VERSION == php* ]] && echo ${BUILD_VERSION:3:3} || echo "")
    - DOCKER_TAG=$BUILD_VERSION$([[ $BUILD_NPM == "true" ]] && echo "-npm" || echo "")
    # Init
    - echo "Testing $BUILD_ARCH image for \"$DOCKER_TAG\" from \"$CI_COMMIT_BRANCH\" branch (PHP is ${DOCKER_PHP:-false}, NPM is $BUILD_NPM)"
    - echo "Runner is \$CI_RUNNER_ID, (arch is $CI_RUNNER_EXECUTABLE_ARCH)"
  script:
    # Build
    - if [ $BUILD_VERSION = "core" ]; then docker build -t $DOCKER_UNIQ:$DOCKER_TAG --no-cache --build-arg NPM_PACKAGE=$BUILD_NPM .; fi
    - if [ $BUILD_VERSION != "core" ]; then docker build -t $DOCKER_UNIQ:$DOCKER_TAG --cache-from $DOCKER_UNIQ:core --build-arg PHP_VERSION=$DOCKER_PHP --build-arg NPM_PACKAGE=$BUILD_NPM .; fi
    # Test
    - docker run --name $DOCKER_UNIQ-$DOCKER_TAG $DOCKER_UNIQ:$DOCKER_TAG >/dev/null 2>&1 &
    - echo "Waiting for container to be up and running (timeout 10 seconds)..." && sleep 10
    - docker exec $DOCKER_UNIQ-$DOCKER_TAG /bin/bash /health.sh
    - DOCKER_CODE=$?
    - docker stop $DOCKER_UNIQ-$DOCKER_TAG|| true
    - docker rm $DOCKER_UNIQ-$DOCKER_TAG || true
    - if test $DOCKER_CODE -ne 0; then echo " - failed" && exit 1; fi

.tpl-stage-build:
  before_script:
    # Vars
    - DOCKER_PHP=$([[ $BUILD_VERSION == php* ]] && echo ${BUILD_VERSION:3:3} || echo "")
    - DOCKER_TAG=$BUILD_VERSION$([[ $BUILD_NPM == "true" ]] && echo "-npm" || echo "")
    # Buildx
    - if [ ! -f /proc/sys/fs/binfmt_misc/qemu-aarch64 ]; then docker run --rm --privileged multiarch/qemu-user-static --reset -p yes; fi
    - docker context create "context-$CI_JOB_ID"
    - docker buildx create --name "builder-$CI_JOB_ID" --use "context-$CI_JOB_ID"
    - docker buildx inspect --bootstrap
    # Init
    - echo "Building $BUILD_ARCH image for \"$DOCKER_TAG\" from \"$CI_COMMIT_BRANCH\" branch (PHP is ${DOCKER_PHP:-false}, NPM is $BUILD_NPM)"
  script:
    # Build part
    - if [ $BUILD_VERSION = "core" ]; then docker buildx build --platform $BUILD_ARCH --tag $DOCKER_NAME:$DOCKER_TAG --build-arg NPM_PACKAGE=$BUILD_NPM .; fi
    - if [ $BUILD_VERSION != "core" ]; then docker buildx build --platform $BUILD_ARCH --tag $DOCKER_NAME:$DOCKER_TAG --build-arg PHP_VERSION=$DOCKER_PHP --build-arg NPM_PACKAGE=$BUILD_NPM .; fi
    # Cleaning
    - docker buildx rm "builder-$CI_JOB_ID"
    - docker context rm "context-$CI_JOB_ID"

.tpl-stage-release:
  extends:
    - .tpl-stage-build
  script:
    # Registry
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USER" --password-stdin
    # Build part
    - if [ $BUILD_VERSION = "core" ]; then docker buildx build --platform $BUILD_ARCH --tag $DOCKER_NAME:$DOCKER_TAG --build-arg NPM_PACKAGE=$BUILD_NPM --push .; fi
    - if [ $BUILD_VERSION != "core" ]; then docker buildx build --platform $BUILD_ARCH --tag $DOCKER_NAME:$DOCKER_TAG --build-arg PHP_VERSION=$DOCKER_PHP --build-arg NPM_PACKAGE=$BUILD_NPM --push .; fi
    # Cleaning
    - docker buildx rm "builder-$CI_JOB_ID"
    - docker context rm "context-$CI_JOB_ID"
  dependencies:
    - dummy-ssl

.tpl-matrix-core:
  parallel:
    matrix:
      - BUILD_ARCH: [ 'linux/amd64', 'linux/arm64' ]
        BUILD_VERSION: [ 'core' ]
        BUILD_NPM: [ 'true', 'false' ]

.tpl-matrix-php:
  parallel:
    matrix:
      - BUILD_ARCH: [ 'linux/amd64', 'linux/arm64' ]
        BUILD_VERSION: [ 'php5.6', 'php7.0', 'php7.1', 'php7.2', 'php7.3', 'php7.4', 'php8.0', 'php8.1', 'php8.2', 'php8.3', 'php8.4' ]
        BUILD_NPM: [ 'true', 'false' ]

test_core:
  stage: test_core
  rules:
    - if: '$CI_RUNNER_EXECUTABLE_ARCH != $BUILD_ARCH'
      when: never
  extends:
    - .tpl-stage-test
    - .tpl-matrix-core

test_php:
  stage: test_php
  rules:
    - if: '$CI_RUNNER_EXECUTABLE_ARCH != $BUILD_ARCH'
      when: never
    - if: '$BUILD_NPM == "true"'
      when: never
  extends:
    - .tpl-stage-test
    - .tpl-matrix-php

dummy-ssl:
  stage: prepare
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
  script:
    - openssl dhparam -out ./ssl/dhparam.pem 4096
    - openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout ./ssl/default.key -out ./ssl/default.crt -subj '/C=NO/ST=Null/L=Null/O=Null/OU=Null/CN=Null'
  artifacts:
    name: $DOCKER_UNIQ
    expire_in: 1 hour
    paths:
      - ssl/

build_core:
  stage: build_core
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: on_success
  extends:
    - .tpl-stage-build
    - .tpl-matrix-core

release_core:
  stage: build_core
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
  extends:
    - .tpl-stage-release
    - .tpl-matrix-core

build_php:
  stage: build_php
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: on_success
  extends:
    - .tpl-stage-build
    - .tpl-matrix-php

release_php:
  stage: build_php
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
  extends:
    - .tpl-stage-release
    - .tpl-matrix-php
