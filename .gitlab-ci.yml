image: confido/buildx-qemu:latest

services:
  - docker:dind

before_script:
  - docker info

variables:
  DOCKER_UNIQ: "build-${CI_PROJECT_NAME}-${CI_COMMIT_BRANCH}-${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_IID}"
  DOCKER_NAME: "${DOCKER_ACC}/${DOCKER_PKG}"
  DOCKER_ARCH: "linux/amd64,linux/arm64"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - test_core
  - test_php
  - prepare
  - release

.tpl-test:
  before_script:
    - DOCKER_PHP=$([[ $BUILD_VERSION == php* ]] && echo ${BUILD_VERSION:3:3} || echo "" )
  script:
    - echo "Building \"$BUILD_VERSION\" from \"$CI_COMMIT_BRANCH\" branch (PHP is ${DOCKER_PHP:-OFF})"
    - if [ $BUILD_VERSION = "core" ]; then docker build --no-cache -t $DOCKER_UNIQ:$BUILD_VERSION .; fi
    - if [ $BUILD_VERSION != "core" ]; then docker build --cache-from $DOCKER_UNIQ:core -t $DOCKER_UNIQ:$BUILD_VERSION --build-arg PHP_VERSION=$DOCKER_PHP .; fi
    - echo "Testing \"$BUILD_VERSION\" from \"$CI_COMMIT_BRANCH\" branch (PHP is ${DOCKER_PHP:-OFF})"
    - docker run --name $DOCKER_UNIQ-$BUILD_VERSION $DOCKER_UNIQ:$BUILD_VERSION >/dev/null 2>&1 &
    - echo "Waiting for container to be up and running (timeout 10 seconds)..." && sleep 10
    - docker exec $DOCKER_UNIQ-$BUILD_VERSION /bin/bash /health.sh
    - DOCKER_CODE=$?
    - if test $DOCKER_CODE -ne 0; then echo " - failed" && exit 1; fi

.tpl-buildx:
  before_script:
    - update-binfmts --enable
    - docker context create multibuilder
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --name multibuilderx --use multibuilder
    - docker buildx inspect --bootstrap
    - echo "$REGISTRY_PASSWORD" | docker login -u "$REGISTRY_USER" --password-stdin
    - DOCKER_PHP=$([[ $BUILD_VERSION == php* ]] && echo ${BUILD_VERSION:3:3} || echo "" )
    - echo "Final multiarch images for \"$BUILD_VERSION\" from \"$CI_COMMIT_BRANCH\" branch (PHP is ${DOCKER_PHP:-OFF})"
  script:
    - docker buildx build --platform $DOCKER_ARCH --tag $DOCKER_NAME:$BUILD_VERSION --build-arg PHP_VERSION=$DOCKER_PHP --push .
  dependencies:
    - dhparam

test_core:
  stage: test_core
  extends: .tpl-test
  parallel:
    matrix:
      - BUILD_VERSION: ['core']

test_php:
  stage: test_php
  extends: .tpl-test
  parallel:
    matrix:
      - BUILD_VERSION: ['php5.6', 'php7.0', 'php7.1', 'php7.2', 'php7.3', 'php7.4', 'php8.0', 'php8.1', 'php8.2', 'php8.3', 'php8.4']

dhparam:
  stage: prepare
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  script:
    - openssl dhparam -out ./ssl/dhparam.pem 4096
    - openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout ./ssl/default.key -out ./ssl/default.crt -subj '/C=NO/ST=Null/L=Null/O=Null/OU=Null/CN=Null'
  artifacts:
    name: $DOCKER_UNIQ
    expire_in: 1 hour
    paths:
      - ssl/

buildx:
  stage: release
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  extends: .tpl-buildx
  parallel:
    matrix:
      - BUILD_VERSION: ['core', 'php5.6', 'php7.0', 'php7.1', 'php7.2', 'php7.3', 'php7.4', 'php8.0', 'php8.1', 'php8.2', 'php8.3', 'php8.4']
